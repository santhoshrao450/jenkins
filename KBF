import java.text.SimpleDateFormat;

def getBuildVariable(String key) {
 def config = new HashMap();
 def thr = Thread.currentThread();
 def build = thr?.executable;
 def buildMap = build.getBuildVariables();
 return buildMap.get(key);
}

// set branch
def jobName = getBuildVariable("BRANCH");
println("job name=" + jobName);
//split job name by / and get a job for each PART (Folder)
String[] jobs = jobName.split("/");
def job = jenkins.model.Jenkins.instance;
for (int i=0; i<jobs.length; i++) {
  job = job.getItem(jobs[i]);
}

//parse build number
boolean foundBuildNumber = false;
String buildNumberAll = getBuildVariable("BUILD");
String buildNumber = "";
int strInd = buildNumberAll.indexOf("<buildNumber>");
if (strInd >=0) {
  int endInd = buildNumberAll.indexOf("</buildNumber>");
  buildNumber = buildNumberAll.substring(strInd + 13, endInd);
  println("build Number=" + buildNumber);
  foundBuildNumber = true;
}
def myBuild = null;
if (foundBuildNumber) {
	myBuild = job.getBuild(buildNumber);
}
else {
	myBuild = job.getLastStableBuild();
}
myBuild.keepLog(true);

//set description
def nodeName = getBuildVariable("NODE");
def crNumber = getBuildVariable("CR_NUMBER");
println("cr number=" + crNumber);
if (myBuild.getDescription() == null) {
  myBuild.setDescription("");
}
SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
myBuild.setDescription(nodeName + " " + sdf.format(new Date()) + " (CR-" + crNumber + ")\n" + myBuild.getDescription());

